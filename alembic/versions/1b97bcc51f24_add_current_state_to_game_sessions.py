"""add_current_state_to_game_sessions

Revision ID: 1b97bcc51f24
Revises: 4eae3ce201c3
Create Date: 2025-09-04 21:18:22.947974

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1b97bcc51f24'
down_revision = '4eae3ce201c3'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('i18n_strings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('language_code', sa.String(length=10), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('context', sa.Text(), nullable=True),
    sa.Column('variables', sa.JSON(), nullable=True),
    sa.Column('is_plural', sa.Boolean(), nullable=False),
    sa.Column('plural_forms', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('needs_review', sa.Boolean(), nullable=False),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('parent_key', sa.String(length=255), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_i18n_strings')),
    sa.UniqueConstraint('key', 'category', 'language_code', name='uq_i18n_strings_key_category_language'),
    sa.UniqueConstraint('key', 'language_code', name='uq_i18n_strings_key_language')
    )
    op.create_index(op.f('ix_i18n_strings_category'), 'i18n_strings', ['category'], unique=False)
    op.create_index(op.f('ix_i18n_strings_id'), 'i18n_strings', ['id'], unique=False)
    op.create_index(op.f('ix_i18n_strings_key'), 'i18n_strings', ['key'], unique=False)
    op.create_index(op.f('ix_i18n_strings_language_code'), 'i18n_strings', ['language_code'], unique=False)
    op.create_table('items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('item_type', sa.String(length=50), nullable=False),
    sa.Column('rarity', sa.String(length=20), nullable=False),
    sa.Column('level_requirement', sa.Integer(), nullable=False),
    sa.Column('is_stackable', sa.Boolean(), nullable=False),
    sa.Column('max_stack_size', sa.Integer(), nullable=False),
    sa.Column('attributes', sa.JSON(), nullable=True),
    sa.Column('health_bonus', sa.Integer(), nullable=False),
    sa.Column('mana_bonus', sa.Integer(), nullable=False),
    sa.Column('strength_bonus', sa.Integer(), nullable=False),
    sa.Column('agility_bonus', sa.Integer(), nullable=False),
    sa.Column('intelligence_bonus', sa.Integer(), nullable=False),
    sa.Column('vitality_bonus', sa.Integer(), nullable=False),
    sa.Column('base_value', sa.Integer(), nullable=False),
    sa.Column('sell_value', sa.Integer(), nullable=False),
    sa.Column('is_tradeable', sa.Boolean(), nullable=False),
    sa.Column('is_droppable', sa.Boolean(), nullable=False),
    sa.Column('is_consumable', sa.Boolean(), nullable=False),
    sa.Column('effects', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_items'))
    )
    op.create_index(op.f('ix_items_id'), 'items', ['id'], unique=False)
    op.create_index(op.f('ix_items_item_id'), 'items', ['item_id'], unique=True)
    op.create_table('quests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quest_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('quest_type', sa.String(length=50), nullable=False),
    sa.Column('is_repeatable', sa.Boolean(), nullable=False),
    sa.Column('max_repeats', sa.Integer(), nullable=True),
    sa.Column('level_requirement', sa.Integer(), nullable=False),
    sa.Column('required_flags', sa.JSON(), nullable=True),
    sa.Column('required_quests', sa.JSON(), nullable=True),
    sa.Column('objectives', sa.JSON(), nullable=True),
    sa.Column('experience_reward', sa.Integer(), nullable=False),
    sa.Column('coins_reward', sa.Integer(), nullable=False),
    sa.Column('items_reward', sa.JSON(), nullable=True),
    sa.Column('quest_data', sa.JSON(), nullable=True),
    sa.Column('start_scene_id', sa.String(length=100), nullable=True),
    sa.Column('end_scene_id', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_quests'))
    )
    op.create_index(op.f('ix_quests_id'), 'quests', ['id'], unique=False)
    op.create_index(op.f('ix_quests_quest_id'), 'quests', ['quest_id'], unique=True)
    op.create_table('scenes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scene_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('scene_type', sa.String(length=50), nullable=False),
    sa.Column('is_accessible', sa.Boolean(), nullable=False),
    sa.Column('level_requirement', sa.Integer(), nullable=False),
    sa.Column('content', sa.JSON(), nullable=True),
    sa.Column('background_image', sa.String(length=500), nullable=True),
    sa.Column('music_track', sa.String(length=255), nullable=True),
    sa.Column('connected_scenes', sa.JSON(), nullable=True),
    sa.Column('required_flags', sa.JSON(), nullable=True),
    sa.Column('required_items', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_scenes'))
    )
    op.create_index(op.f('ix_scenes_id'), 'scenes', ['id'], unique=False)
    op.create_index(op.f('ix_scenes_scene_id'), 'scenes', ['scene_id'], unique=True)
    op.create_table('actions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scene_id', sa.Integer(), nullable=False),
    sa.Column('action_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('action_type', sa.String(length=50), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('level_requirement', sa.Integer(), nullable=False),
    sa.Column('required_flags', sa.JSON(), nullable=True),
    sa.Column('required_items', sa.JSON(), nullable=True),
    sa.Column('cost_energy', sa.Integer(), nullable=False),
    sa.Column('cost_mana', sa.Integer(), nullable=False),
    sa.Column('effects', sa.JSON(), nullable=True),
    sa.Column('target_scene_id', sa.String(length=100), nullable=True),
    sa.Column('action_data', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['scene_id'], ['scenes.id'], name=op.f('fk_actions_scene_id_scenes')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_actions'))
    )
    op.create_index(op.f('ix_actions_id'), 'actions', ['id'], unique=False)
    op.create_table('players',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('character_name', sa.String(length=255), nullable=True),
    sa.Column('character_class', sa.String(length=100), nullable=True),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('experience', sa.Integer(), nullable=False),
    sa.Column('health', sa.Integer(), nullable=False),
    sa.Column('max_health', sa.Integer(), nullable=False),
    sa.Column('mana', sa.Integer(), nullable=False),
    sa.Column('max_mana', sa.Integer(), nullable=False),
    sa.Column('strength', sa.Integer(), nullable=False),
    sa.Column('agility', sa.Integer(), nullable=False),
    sa.Column('intelligence', sa.Integer(), nullable=False),
    sa.Column('vitality', sa.Integer(), nullable=False),
    sa.Column('coins', sa.Integer(), nullable=False),
    sa.Column('gems', sa.Integer(), nullable=False),
    sa.Column('energy', sa.Integer(), nullable=False),
    sa.Column('max_energy', sa.Integer(), nullable=False),
    sa.Column('flags', sa.JSON(), nullable=True),
    sa.Column('achievements', sa.JSON(), nullable=True),
    sa.Column('current_scene_id', sa.Integer(), nullable=True),
    sa.Column('current_quest_id', sa.Integer(), nullable=True),
    sa.Column('game_data', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('is_online', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_played', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['current_quest_id'], ['quests.id'], name=op.f('fk_players_current_quest_id_quests')),
    sa.ForeignKeyConstraint(['current_scene_id'], ['scenes.id'], name=op.f('fk_players_current_scene_id_scenes')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_players_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_players')),
    sa.UniqueConstraint('user_id', name=op.f('uq_players_user_id'))
    )
    op.create_index(op.f('ix_players_id'), 'players', ['id'], unique=False)
    op.create_table('game_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('start_scene_id', sa.String(length=100), nullable=True),
    sa.Column('end_scene_id', sa.String(length=100), nullable=True),
    sa.Column('session_data', sa.JSON(), nullable=True),
    sa.Column('player_state_snapshot', sa.JSON(), nullable=True),
    sa.Column('current_state', sa.String(length=100), nullable=True),
    sa.Column('messages_count', sa.Integer(), nullable=False),
    sa.Column('actions_count', sa.Integer(), nullable=False),
    sa.Column('ai_generations_count', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('client_info', sa.JSON(), nullable=True),
    sa.Column('error_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], name=op.f('fk_game_sessions_player_id_players')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_game_sessions'))
    )
    op.create_index(op.f('ix_game_sessions_id'), 'game_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_game_sessions_session_id'), 'game_sessions', ['session_id'], unique=True)
    op.create_table('inventory_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('is_equipped', sa.Boolean(), nullable=False),
    sa.Column('equipment_slot', sa.String(length=50), nullable=True),
    sa.Column('instance_data', sa.JSON(), nullable=True),
    sa.Column('durability', sa.Integer(), nullable=True),
    sa.Column('max_durability', sa.Integer(), nullable=True),
    sa.Column('acquired_at', sa.DateTime(), nullable=False),
    sa.Column('acquired_from', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], name=op.f('fk_inventory_items_item_id_items')),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], name=op.f('fk_inventory_items_player_id_players')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_inventory_items'))
    )
    op.create_index(op.f('ix_inventory_items_id'), 'inventory_items', ['id'], unique=False)
    op.create_table('quest_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('current_objective', sa.Integer(), nullable=False),
    sa.Column('progress_data', sa.JSON(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('repeat_count', sa.Integer(), nullable=False),
    sa.Column('rewards_claimed', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], name=op.f('fk_quest_progress_player_id_players')),
    sa.ForeignKeyConstraint(['quest_id'], ['quests.id'], name=op.f('fk_quest_progress_quest_id_quests')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_quest_progress'))
    )
    op.create_index(op.f('ix_quest_progress_id'), 'quest_progress', ['id'], unique=False)
    op.create_table('ai_generations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game_session_id', sa.Integer(), nullable=False),
    sa.Column('generation_id', sa.String(length=100), nullable=False),
    sa.Column('generation_type', sa.String(length=50), nullable=False),
    sa.Column('prompt', sa.Text(), nullable=False),
    sa.Column('response', sa.Text(), nullable=False),
    sa.Column('context_data', sa.JSON(), nullable=True),
    sa.Column('scene_id', sa.String(length=100), nullable=True),
    sa.Column('action_id', sa.String(length=100), nullable=True),
    sa.Column('model_name', sa.String(length=100), nullable=True),
    sa.Column('model_version', sa.String(length=50), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('max_tokens', sa.Integer(), nullable=True),
    sa.Column('prompt_tokens', sa.Integer(), nullable=True),
    sa.Column('completion_tokens', sa.Integer(), nullable=True),
    sa.Column('total_tokens', sa.Integer(), nullable=True),
    sa.Column('cost_usd', sa.Float(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('is_successful', sa.Boolean(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('quality_score', sa.Float(), nullable=True),
    sa.Column('user_rating', sa.Integer(), nullable=True),
    sa.Column('is_flagged', sa.Boolean(), nullable=False),
    sa.Column('generation_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['game_session_id'], ['game_sessions.id'], name=op.f('fk_ai_generations_game_session_id_game_sessions')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ai_generations'))
    )
    op.create_index(op.f('ix_ai_generations_generation_id'), 'ai_generations', ['generation_id'], unique=True)
    op.create_index(op.f('ix_ai_generations_id'), 'ai_generations', ['id'], unique=False)
    op.create_table('message_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game_session_id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.String(length=100), nullable=True),
    sa.Column('message_type', sa.String(length=50), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('scene_id', sa.String(length=100), nullable=True),
    sa.Column('action_id', sa.String(length=100), nullable=True),
    sa.Column('message_metadata', sa.JSON(), nullable=True),
    sa.Column('is_ai_generated', sa.Boolean(), nullable=False),
    sa.Column('ai_generation_id', sa.Integer(), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=False),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=False),
    sa.Column('has_error', sa.Boolean(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ai_generation_id'], ['ai_generations.id'], name=op.f('fk_message_logs_ai_generation_id_ai_generations')),
    sa.ForeignKeyConstraint(['game_session_id'], ['game_sessions.id'], name=op.f('fk_message_logs_game_session_id_game_sessions')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_message_logs'))
    )
    op.create_index(op.f('ix_message_logs_id'), 'message_logs', ['id'], unique=False)
    op.drop_column('users', 'game_data')
    op.drop_column('users', 'current_scene')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('current_scene', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('game_data', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_message_logs_id'), table_name='message_logs')
    op.drop_table('message_logs')
    op.drop_index(op.f('ix_ai_generations_id'), table_name='ai_generations')
    op.drop_index(op.f('ix_ai_generations_generation_id'), table_name='ai_generations')
    op.drop_table('ai_generations')
    op.drop_index(op.f('ix_quest_progress_id'), table_name='quest_progress')
    op.drop_table('quest_progress')
    op.drop_index(op.f('ix_inventory_items_id'), table_name='inventory_items')
    op.drop_table('inventory_items')
    op.drop_index(op.f('ix_game_sessions_session_id'), table_name='game_sessions')
    op.drop_index(op.f('ix_game_sessions_id'), table_name='game_sessions')
    op.drop_table('game_sessions')
    op.drop_index(op.f('ix_players_id'), table_name='players')
    op.drop_table('players')
    op.drop_index(op.f('ix_actions_id'), table_name='actions')
    op.drop_table('actions')
    op.drop_index(op.f('ix_scenes_scene_id'), table_name='scenes')
    op.drop_index(op.f('ix_scenes_id'), table_name='scenes')
    op.drop_table('scenes')
    op.drop_index(op.f('ix_quests_quest_id'), table_name='quests')
    op.drop_index(op.f('ix_quests_id'), table_name='quests')
    op.drop_table('quests')
    op.drop_index(op.f('ix_items_item_id'), table_name='items')
    op.drop_index(op.f('ix_items_id'), table_name='items')
    op.drop_table('items')
    op.drop_index(op.f('ix_i18n_strings_language_code'), table_name='i18n_strings')
    op.drop_index(op.f('ix_i18n_strings_key'), table_name='i18n_strings')
    op.drop_index(op.f('ix_i18n_strings_id'), table_name='i18n_strings')
    op.drop_index(op.f('ix_i18n_strings_category'), table_name='i18n_strings')
    op.drop_table('i18n_strings')
    # ### end Alembic commands ###
